// AUTOMATICALLY GENERATED FILE. PLEASE DO NOT MODIFY IT MANUALLY

// PIO Unified Debugger
//
// Documentation: https://docs.platformio.org/page/plus/debugging.html
// Configuration: https://docs.platformio.org/page/projectconf/section_env_debug.html

{
    "version": "0.2.0",
    "configurations": [
        {
            //  Cortex Debug: https://marcelball.ca/projects/cortex-debug/cortex-debug-launch-configurations/
            "name": "Cortex Debug (OpenOCD)",
            "type": "cortex-debug",
            "request": "launch",
            "servertype": "openocd",
            "cwd": "${workspaceRoot}",
            "executable": ".pioenvs/bluepill_f103c8/firmware.elf",
            "device": "STM32F103C8",
            "configFiles": [ 
                "interface/stlink-v2.cfg",
                "target/stm32f1x.cfg",
                "scripts/debug.ocd" 
            ],
            "preLaunchCommands": [
                //  This indicates that an unrecognized breakpoint location should automatically result in a pending breakpoint being created.
                "set breakpoint pending on",
            
                //  Display Baseloader Parameters and Temp Variables after stepping
                "display/x base_para",
                "display/x base_tmp",
            
                //  Display the instruction
                "display/i $pc",
            
                "watch base_para.restart",
            
                //  break ???
                "echo \"si 10\""
            ]
            // postLaunchCommands: string[];
            // preAttachCommands: string[];
            // postAttachCommands: string[];
            // preRestartCommands: string[];
            // postRestartCommands: string[];        
        },
        {
            //  Debug the STM32 Blue Pill program.
            "name": "Debug (STM32 Blue Pill Emulator)",
            "type": "gdb",
            "request": "launch",
            "cwd": "${workspaceRoot}",

            "target": ".pioenvs/bluepill_f103c8/firmware.elf",

            //  Start arm-none-eabi-gdb with the loader.gdb script.  Connects to OpenOCD to send commands to ST-Link USB dongle.
            "gdbpath": "arm-none-eabi-gdb",
            "debugger_args": [
                "-x",
                "scripts/debug.gdb"
            ],

            //  For debugger display, don't interpret values returned by gdb.
            "valuesFormatting": "disabled",

            //  Enable debug output.
            "printCalls": false,
            "showDevDebugOutput": false,
        },
        {
            //  Debug the STM32 Blue Pill program.
            "name": "Debug (Bootloader Emulator)",
            "type": "gdb",
            "request": "launch",
            "cwd": "${workspaceRoot}",

            "target": "../bluepill-bootloader/.pioenvs/bluepill_f103c8_bootloader/firmware.elf",

            //  Start arm-none-eabi-gdb with the loader.gdb script.  Connects to OpenOCD to send commands to ST-Link USB dongle.
            "gdbpath": "arm-none-eabi-gdb",
            "debugger_args": [
                "-x",
                "scripts/debug.gdb"
            ],

            //  For debugger display, don't interpret values returned by gdb.
            "valuesFormatting": "disabled",

            //  Enable debug output.
            "printCalls": false,
            "showDevDebugOutput": false,
        },
        {
            //  Debug the STM32 Blue Pill program.
            "name": "Debug (STM32 Blue Pill)",
            "type": "gdb",
            "request": "launch",
            "cwd": "${workspaceRoot}",

            "target": ".pioenvs/bluepill_f103c8/firmware.elf",

            //  Start arm-none-eabi-gdb with the gdb script.
            "gdbpath": "arm-none-eabi-gdb",
            "debugger_args": [
                "-x",
                "scripts/debug.gdb"
            ],

            //  For debugger display, don't interpret values returned by gdb.
            "valuesFormatting": "disabled",

            //  Enable debug output.
            "printCalls": false,
            "showDevDebugOutput": false,
        }
    ]
}