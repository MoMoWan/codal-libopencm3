project(codal-libopencm3)

include("${CODAL_UTILS_LOCATION}")

# find sources and headers
RECURSIVE_FIND_DIR(TOP_LEVEL_INCLUDE_DIRS "${CMAKE_CURRENT_SOURCE_DIR}/src" "*.h")
RECURSIVE_FIND_FILE(TOP_LEVEL_SOURCE_FILES "${CMAKE_CURRENT_SOURCE_DIR}/src" "*.c??")

# LIST(APPEND TOP_LEVEL_SOURCE_FILES "${CMAKE_CURRENT_SOURCE_DIR}/asm/CortexContextSwitch.s")

RECURSIVE_FIND_DIR(LIB_INCLUDE_DIRS "${CMAKE_CURRENT_SOURCE_DIR}/lib" "*.h")
RECURSIVE_FIND_FILE(LIB_SOURCE_FILES "${CMAKE_CURRENT_SOURCE_DIR}/lib" "*.c??")

RECURSIVE_FIND_DIR(STM32_INCLUDE_DIRS "${CMAKE_CURRENT_SOURCE_DIR}/stm32" "*.h")
RECURSIVE_FIND_FILE(STM32_SOURCE_FILES "${CMAKE_CURRENT_SOURCE_DIR}/stm32" "*.c??")

string(TOLOWER "${CODAL_TARGET_PROCESSOR}" TARGET_PROCESSOR)

set(CMAKE_LINKER_FLAGS "${CMAKE_LINKER_FLAGS} -T\"${CMAKE_CURRENT_LIST_DIR}/ld/stm32f103x8.ld\"" PARENT_SCOPE)
set(CMAKE_EXE_LINKER_FLAGS    "${CMAKE_EXE_LINKER_FLAGS} -T\"${CMAKE_CURRENT_LIST_DIR}/ld/stm32f103x8.ld\"" PARENT_SCOPE)
set(CMAKE_SYSTEM_PROCESSOR "armv7-m" PARENT_SCOPE)

# add them
include_directories(${INCLUDE_DIRS} ${TOP_LEVEL_INCLUDE_DIRS} ${LIB_INCLUDE_DIRS} ${STM32_INCLUDE_DIRS})

# create our target
add_library(codal-libopencm3 ${TOP_LEVEL_SOURCE_FILES} ${LIB_SOURCE_FILES} ${STM32_SOURCE_FILES})

target_link_libraries(
    codal-libopencm3
    codal-core
)

# expose it to parent cmake.
target_include_directories(codal-libopencm3 PUBLIC ${STM32_INCLUDE_DIRS} ${LIB_INCLUDE_DIRS} ${TOP_LEVEL_INCLUDE_DIRS})
