//  Based on https://github.com/nedseb/codal-stm32-iot-node/blob/master/model/STM32IotNodeIO.cpp
/*
  The MIT License (MIT)

  Copyright (c) 2017 Lancaster University.

  Permission is hereby granted, free of charge, to any person obtaining a
  copy of this software and associated documentation files (the "Software"),
  to deal in the Software without restriction, including without limitation
  the rights to use, copy, modify, merge, publish, distribute, sublicense,
  and/or sell copies of the Software, and to permit persons to whom the
  Software is furnished to do so, subject to the following conditions:

  The above copyright notice and this permission notice shall be included in
  all copies or substantial portions of the Software.

  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
  THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  DEALINGS IN THE SOFTWARE.
*/

/**
  * Class definition for MicroBit NEXT IO.
  * Represents a collection of all I/O pins on the device.
  */

#include <libopencm3/stm32/rcc.h>
#include <libopencm3/stm32/gpio.h>
#include "CodalConfig.h"
#include "STM32BluePillIO.h"

using namespace codal;

/**
  * Constructor.
  *
  * Create a representation of all given I/O pins on the edge connector
  *
  * Accepts a sequence of unique ID's used to distinguish events raised
  * by MicroBitPin instances on the default EventModel.
  */
STM32BluePillIO::STM32BluePillIO() :
    // From https://docs.google.com/spreadsheets/d/1yLciHFyPfhRfwEcG3wfqHDgRFa5OoQYTk63bUmTboa8/edit#gid=0

//  Pin Constructors are autogenerated. Do not update here
pa0  (ID_PIN_PA0 , 0, RCC_GPIOA, GPIOA, GPIO0, PIN_CAPABILITY_DIGITAL),
pa1  (ID_PIN_PA1 , 1, RCC_GPIOA, GPIOA, GPIO1, PIN_CAPABILITY_DIGITAL),
pa2  (ID_PIN_PA2 , 2, RCC_GPIOA, GPIOA, GPIO2, PIN_CAPABILITY_DIGITAL),
pa3  (ID_PIN_PA3 , 3, RCC_GPIOA, GPIOA, GPIO3, PIN_CAPABILITY_DIGITAL),
pa4  (ID_PIN_PA4 , 4, RCC_GPIOA, GPIOA, GPIO4, PIN_CAPABILITY_DIGITAL),
pa5  (ID_PIN_PA5 , 5, RCC_GPIOA, GPIOA, GPIO5, PIN_CAPABILITY_DIGITAL),
pa6  (ID_PIN_PA6 , 6, RCC_GPIOA, GPIOA, GPIO6, PIN_CAPABILITY_DIGITAL),
pa7  (ID_PIN_PA7 , 7, RCC_GPIOA, GPIOA, GPIO7, PIN_CAPABILITY_DIGITAL),
pa8  (ID_PIN_PA8 , 8, RCC_GPIOA, GPIOA, GPIO8, PIN_CAPABILITY_DIGITAL),
pa9  (ID_PIN_PA9 , 9, RCC_GPIOA, GPIOA, GPIO9, PIN_CAPABILITY_DIGITAL),
pa10 (ID_PIN_PA10, 10, RCC_GPIOA, GPIOA, GPIO10, PIN_CAPABILITY_DIGITAL),
pa11 (ID_PIN_PA11, 11, RCC_GPIOA, GPIOA, GPIO11, PIN_CAPABILITY_DIGITAL),
pa12 (ID_PIN_PA12, 12, RCC_GPIOA, GPIOA, GPIO12, PIN_CAPABILITY_DIGITAL),
pa15 (ID_PIN_PA15, 13, RCC_GPIOA, GPIOA, GPIO15, PIN_CAPABILITY_DIGITAL),
pb0  (ID_PIN_PB0 , 14, RCC_GPIOB, GPIOB, GPIO0, PIN_CAPABILITY_DIGITAL),
pb1  (ID_PIN_PB1 , 15, RCC_GPIOB, GPIOB, GPIO1, PIN_CAPABILITY_DIGITAL),
pb3  (ID_PIN_PB3 , 16, RCC_GPIOB, GPIOB, GPIO3, PIN_CAPABILITY_DIGITAL),
pb4  (ID_PIN_PB4 , 17, RCC_GPIOB, GPIOB, GPIO4, PIN_CAPABILITY_DIGITAL),
pb5  (ID_PIN_PB5 , 18, RCC_GPIOB, GPIOB, GPIO5, PIN_CAPABILITY_DIGITAL),
pb6  (ID_PIN_PB6 , 19, RCC_GPIOB, GPIOB, GPIO6, PIN_CAPABILITY_DIGITAL),
pb7  (ID_PIN_PB7 , 20, RCC_GPIOB, GPIOB, GPIO7, PIN_CAPABILITY_DIGITAL),
pb8  (ID_PIN_PB8 , 21, RCC_GPIOB, GPIOB, GPIO8, PIN_CAPABILITY_DIGITAL),
pb9  (ID_PIN_PB9 , 22, RCC_GPIOB, GPIOB, GPIO9, PIN_CAPABILITY_DIGITAL),
pb10 (ID_PIN_PB10, 23, RCC_GPIOB, GPIOB, GPIO10, PIN_CAPABILITY_DIGITAL),
pb11 (ID_PIN_PB11, 24, RCC_GPIOB, GPIOB, GPIO11, PIN_CAPABILITY_DIGITAL),
pb12 (ID_PIN_PB12, 25, RCC_GPIOB, GPIOB, GPIO12, PIN_CAPABILITY_DIGITAL),
pb13 (ID_PIN_PB13, 26, RCC_GPIOB, GPIOB, GPIO13, PIN_CAPABILITY_DIGITAL),
pb14 (ID_PIN_PB14, 27, RCC_GPIOB, GPIOB, GPIO14, PIN_CAPABILITY_DIGITAL),
pb15 (ID_PIN_PB15, 28, RCC_GPIOB, GPIOB, GPIO15, PIN_CAPABILITY_DIGITAL),
pc10 (ID_PIN_PC10, 29, RCC_GPIOC, GPIOC, GPIO10, PIN_CAPABILITY_DIGITAL),
pc11 (ID_PIN_PC11, 30, RCC_GPIOC, GPIOC, GPIO11, PIN_CAPABILITY_DIGITAL),
pc12 (ID_PIN_PC12, 31, RCC_GPIOC, GPIOC, GPIO12, PIN_CAPABILITY_DIGITAL),
pd2  (ID_PIN_PD2 , 32, RCC_GPIOD, GPIOD, GPIO2, PIN_CAPABILITY_DIGITAL),
pd3  (ID_PIN_PD3 , 33, RCC_GPIOD, GPIOD, GPIO3, PIN_CAPABILITY_DIGITAL),
pd4  (ID_PIN_PD4 , 34, RCC_GPIOD, GPIOD, GPIO4, PIN_CAPABILITY_DIGITAL),
pd5  (ID_PIN_PD5 , 35, RCC_GPIOD, GPIOD, GPIO5, PIN_CAPABILITY_DIGITAL),
pd6  (ID_PIN_PD6 , 36, RCC_GPIOD, GPIOD, GPIO6, PIN_CAPABILITY_DIGITAL),
pd7  (ID_PIN_PD7 , 37, RCC_GPIOD, GPIOD, GPIO7, PIN_CAPABILITY_DIGITAL),
pd12 (ID_PIN_PD12, 38, RCC_GPIOD, GPIOD, GPIO12, PIN_CAPABILITY_DIGITAL),
pd13 (ID_PIN_PD13, 39, RCC_GPIOD, GPIOD, GPIO13, PIN_CAPABILITY_DIGITAL),
pd14 (ID_PIN_PD14, 40, RCC_GPIOD, GPIOD, GPIO14, PIN_CAPABILITY_DIGITAL),
pd15 (ID_PIN_PD15, 41, RCC_GPIOD, GPIOD, GPIO15, PIN_CAPABILITY_DIGITAL),
ch15         (ID_PIN_TIM_CH15        , 42, RCC_GPIOA, GPIOA, GPIO0, PIN_CAPABILITY_DIGITAL),
ch25         (ID_PIN_TIM_CH25        , 43, RCC_GPIOA, GPIOA, GPIO1, PIN_CAPABILITY_DIGITAL),
ch35         (ID_PIN_TIM_CH35        , 44, RCC_GPIOA, GPIOA, GPIO2, PIN_CAPABILITY_DIGITAL),
ch45         (ID_PIN_TIM_CH45        , 45, RCC_GPIOA, GPIOA, GPIO3, PIN_CAPABILITY_DIGITAL),
ch14         (ID_PIN_TIM_CH14        , 46, RCC_GPIOB, GPIOB, GPIO6, PIN_CAPABILITY_DIGITAL),
ch24         (ID_PIN_TIM_CH24        , 47, RCC_GPIOB, GPIOB, GPIO7, PIN_CAPABILITY_DIGITAL),
ch34         (ID_PIN_TIM_CH34        , 48, RCC_GPIOB, GPIOB, GPIO8, PIN_CAPABILITY_DIGITAL),
ch44         (ID_PIN_TIM_CH44        , 49, RCC_GPIOB, GPIOB, GPIO9, PIN_CAPABILITY_DIGITAL),
ch14_remap   (ID_PIN_TIM_CH14_REMAP  , 50, RCC_GPIOD, GPIOD, GPIO12, PIN_CAPABILITY_DIGITAL),
ch24_remap   (ID_PIN_TIM_CH24_REMAP  , 51, RCC_GPIOD, GPIOD, GPIO13, PIN_CAPABILITY_DIGITAL),
ch34_remap   (ID_PIN_TIM_CH34_REMAP  , 52, RCC_GPIOD, GPIOD, GPIO14, PIN_CAPABILITY_DIGITAL),
ch44_remap   (ID_PIN_TIM_CH44_REMAP  , 53, RCC_GPIOD, GPIOD, GPIO15, PIN_CAPABILITY_DIGITAL),
ch13         (ID_PIN_TIM_CH13        , 54, RCC_GPIOA, GPIOA, GPIO6, PIN_CAPABILITY_DIGITAL),
ch23         (ID_PIN_TIM_CH23        , 55, RCC_GPIOA, GPIOA, GPIO7, PIN_CAPABILITY_DIGITAL),
ch33         (ID_PIN_TIM_CH33        , 56, RCC_GPIOB, GPIOB, GPIO0, PIN_CAPABILITY_DIGITAL),
ch43         (ID_PIN_TIM_CH43        , 57, RCC_GPIOB, GPIOB, GPIO1, PIN_CAPABILITY_DIGITAL),
ch22         (ID_PIN_TIM_CH22        , 58, RCC_GPIOA, GPIOA, GPIO1, PIN_CAPABILITY_DIGITAL),
ch32         (ID_PIN_TIM_CH32        , 59, RCC_GPIOA, GPIOA, GPIO2, PIN_CAPABILITY_DIGITAL),
ch42         (ID_PIN_TIM_CH42        , 60, RCC_GPIOA, GPIOA, GPIO3, PIN_CAPABILITY_DIGITAL),
etr1         (ID_PIN_TIM_ETR1        , 61, RCC_GPIOA, GPIOA, GPIO12, PIN_CAPABILITY_DIGITAL),
ch11         (ID_PIN_TIM_CH11        , 62, RCC_GPIOA, GPIOA, GPIO8, PIN_CAPABILITY_DIGITAL),
ch21         (ID_PIN_TIM_CH21        , 63, RCC_GPIOA, GPIOA, GPIO9, PIN_CAPABILITY_DIGITAL),
ch31         (ID_PIN_TIM_CH31        , 64, RCC_GPIOA, GPIOA, GPIO10, PIN_CAPABILITY_DIGITAL),
ch41         (ID_PIN_TIM_CH41        , 65, RCC_GPIOA, GPIOA, GPIO11, PIN_CAPABILITY_DIGITAL),
bkin1        (ID_PIN_TIM_BKIN1       , 66, RCC_GPIOB, GPIOB, GPIO12, PIN_CAPABILITY_DIGITAL),
ch1n1        (ID_PIN_TIM_CH1N1       , 67, RCC_GPIOB, GPIOB, GPIO13, PIN_CAPABILITY_DIGITAL),
ch2n1        (ID_PIN_TIM_CH2N1       , 68, RCC_GPIOB, GPIOB, GPIO14, PIN_CAPABILITY_DIGITAL),
ch3n1        (ID_PIN_TIM_CH3N1       , 69, RCC_GPIOB, GPIOB, GPIO15, PIN_CAPABILITY_DIGITAL),
tx5          (ID_PIN_UART_TX5        , 70, RCC_GPIOC, GPIOC, GPIO12, PIN_CAPABILITY_DIGITAL),
rx5          (ID_PIN_UART_RX5        , 71, RCC_GPIOD, GPIOD, GPIO2, PIN_CAPABILITY_DIGITAL),
tx4          (ID_PIN_UART_TX4        , 72, RCC_GPIOC, GPIOC, GPIO10, PIN_CAPABILITY_DIGITAL),
rx4          (ID_PIN_UART_RX4        , 73, RCC_GPIOC, GPIOC, GPIO11, PIN_CAPABILITY_DIGITAL),
tx3          (ID_PIN_USART_TX3       , 74, RCC_GPIOB, GPIOB, GPIO10, PIN_CAPABILITY_DIGITAL),
rx3          (ID_PIN_USART_RX3       , 75, RCC_GPIOB, GPIOB, GPIO11, PIN_CAPABILITY_DIGITAL),
ck3          (ID_PIN_USART_CK3       , 76, RCC_GPIOB, GPIOB, GPIO12, PIN_CAPABILITY_DIGITAL),
cts3         (ID_PIN_USART_CTS3      , 77, RCC_GPIOB, GPIOB, GPIO13, PIN_CAPABILITY_DIGITAL),
rts3         (ID_PIN_USART_RTS3      , 78, RCC_GPIOB, GPIOB, GPIO14, PIN_CAPABILITY_DIGITAL),
cts2         (ID_PIN_USART_CTS2      , 79, RCC_GPIOA, GPIOA, GPIO0, PIN_CAPABILITY_DIGITAL),
rts2         (ID_PIN_USART_RTS2      , 80, RCC_GPIOA, GPIOA, GPIO1, PIN_CAPABILITY_DIGITAL),
tx2          (ID_PIN_USART_TX2       , 81, RCC_GPIOA, GPIOA, GPIO2, PIN_CAPABILITY_DIGITAL),
rx2          (ID_PIN_USART_RX2       , 82, RCC_GPIOA, GPIOA, GPIO3, PIN_CAPABILITY_DIGITAL),
ck2          (ID_PIN_USART_CK2       , 83, RCC_GPIOA, GPIOA, GPIO4, PIN_CAPABILITY_DIGITAL),
cts2_remap   (ID_PIN_USART_CTS2_REMAP, 84, RCC_GPIOD, GPIOD, GPIO3, PIN_CAPABILITY_DIGITAL),
rts2_remap   (ID_PIN_USART_RTS2_REMAP, 85, RCC_GPIOD, GPIOD, GPIO4, PIN_CAPABILITY_DIGITAL),
tx2_remap    (ID_PIN_USART_TX2_REMAP , 86, RCC_GPIOD, GPIOD, GPIO5, PIN_CAPABILITY_DIGITAL),
rx2_remap    (ID_PIN_USART_RX2_REMAP , 87, RCC_GPIOD, GPIOD, GPIO6, PIN_CAPABILITY_DIGITAL),
ck2_remap    (ID_PIN_USART_CK2_REMAP , 88, RCC_GPIOD, GPIOD, GPIO7, PIN_CAPABILITY_DIGITAL),
tx1          (ID_PIN_USART_TX1       , 89, RCC_GPIOA, GPIOA, GPIO9, PIN_CAPABILITY_DIGITAL),
rx1          (ID_PIN_USART_RX1       , 90, RCC_GPIOA, GPIOA, GPIO10, PIN_CAPABILITY_DIGITAL),
tx1_remap    (ID_PIN_USART_TX1_REMAP , 91, RCC_GPIOB, GPIOB, GPIO6, PIN_CAPABILITY_DIGITAL),
rx1_remap    (ID_PIN_USART_RX1_REMAP , 92, RCC_GPIOB, GPIOB, GPIO7, PIN_CAPABILITY_DIGITAL),
smbai1       (ID_PIN_I2C_SMBAI1      , 93, RCC_GPIOB, GPIOB, GPIO5, PIN_CAPABILITY_DIGITAL),
scl1         (ID_PIN_I2C_SCL1        , 94, RCC_GPIOB, GPIOB, GPIO6, PIN_CAPABILITY_DIGITAL),
sda1         (ID_PIN_I2C_SDA1        , 95, RCC_GPIOB, GPIOB, GPIO7, PIN_CAPABILITY_DIGITAL),
smbai1_remap (ID_PIN_I2C_SMBAI1_REMAP, 96, RCC_GPIOB, GPIOB, GPIO5, PIN_CAPABILITY_DIGITAL),
scl1_remap   (ID_PIN_I2C_SCL1_REMAP  , 97, RCC_GPIOB, GPIOB, GPIO8, PIN_CAPABILITY_DIGITAL),
sda1_remap   (ID_PIN_I2C_SDA1_REMAP  , 98, RCC_GPIOB, GPIOB, GPIO9, PIN_CAPABILITY_DIGITAL),
scl2         (ID_PIN_I2C_SCL2        , 99, RCC_GPIOB, GPIOB, GPIO10, PIN_CAPABILITY_DIGITAL),
sda2         (ID_PIN_I2C_SDA2        , 100, RCC_GPIOB, GPIOB, GPIO11, PIN_CAPABILITY_DIGITAL),
smbai2       (ID_PIN_I2C_SMBAI2      , 101, RCC_GPIOB, GPIOB, GPIO12, PIN_CAPABILITY_DIGITAL),
nss1         (ID_PIN_SPI_NSS1        , 102, RCC_GPIOA, GPIOA, GPIO4, PIN_CAPABILITY_DIGITAL),
sck1         (ID_PIN_SPI_SCK1        , 103, RCC_GPIOA, GPIOA, GPIO5, PIN_CAPABILITY_DIGITAL),
miso1        (ID_PIN_SPI_MISO1       , 104, RCC_GPIOA, GPIOA, GPIO6, PIN_CAPABILITY_DIGITAL),
mosi1        (ID_PIN_SPI_MOSI1       , 105, RCC_GPIOA, GPIOA, GPIO7, PIN_CAPABILITY_DIGITAL),
nss1_remap   (ID_PIN_SPI_NSS1_REMAP  , 106, RCC_GPIOA, GPIOA, GPIO15, PIN_CAPABILITY_DIGITAL),
sck1_remap   (ID_PIN_SPI_SCK1_REMAP  , 107, RCC_GPIOB, GPIOB, GPIO3, PIN_CAPABILITY_DIGITAL),
miso1_remap  (ID_PIN_SPI_MISO1_REMAP , 108, RCC_GPIOB, GPIOB, GPIO4, PIN_CAPABILITY_DIGITAL),
mosi1_remap  (ID_PIN_SPI_MOSI1_REMAP , 109, RCC_GPIOB, GPIOB, GPIO5, PIN_CAPABILITY_DIGITAL),
nss2         (ID_PIN_SPI_NSS2        , 110, RCC_GPIOB, GPIOB, GPIO12, PIN_CAPABILITY_DIGITAL),
sck2         (ID_PIN_SPI_SCK2        , 111, RCC_GPIOB, GPIOB, GPIO13, PIN_CAPABILITY_DIGITAL),
miso2        (ID_PIN_SPI_MISO2       , 112, RCC_GPIOB, GPIOB, GPIO14, PIN_CAPABILITY_DIGITAL),
mosi2        (ID_PIN_SPI_MOSI2       , 113, RCC_GPIOB, GPIOB, GPIO15, PIN_CAPABILITY_DIGITAL),
nss3         (ID_PIN_SPI_NSS3        , 114, RCC_GPIOA, GPIOA, GPIO15, PIN_CAPABILITY_DIGITAL),
sck3         (ID_PIN_SPI_SCK3        , 115, RCC_GPIOB, GPIOB, GPIO3, PIN_CAPABILITY_DIGITAL),
miso3        (ID_PIN_SPI_MISO3       , 116, RCC_GPIOB, GPIOB, GPIO4, PIN_CAPABILITY_DIGITAL),
mosi3        (ID_PIN_SPI_MOSI3       , 117, RCC_GPIOB, GPIOB, GPIO5, PIN_CAPABILITY_DIGITAL),
nss3_remap   (ID_PIN_SPI_NSS3_REMAP  , 118, RCC_GPIOA, GPIOA, GPIO4, PIN_CAPABILITY_DIGITAL),
sck3_remap   (ID_PIN_SPI_SCK3_REMAP  , 119, RCC_GPIOC, GPIOC, GPIO10, PIN_CAPABILITY_DIGITAL),
miso3_remap  (ID_PIN_SPI_MISO3_REMAP , 120, RCC_GPIOC, GPIOC, GPIO11, PIN_CAPABILITY_DIGITAL),
mosi3_remap  (ID_PIN_SPI_MOSI3_REMAP , 121, RCC_GPIOC, GPIOC, GPIO12, PIN_CAPABILITY_DIGITAL),
led         (ID_PIN_LED        , 122, RCC_GPIOC, GPIOC, GPIO13, PIN_CAPABILITY_DIGITAL)

//  TODO: temperature (ID_PIN_TEMPERATURE, 123, RCC_GPIOADC, GPIOADC, GPIOTEMP, PIN_CAPABILITY_DIGITAL),
//  TODO: vref        (ID_PIN_VREF       , 124, RCC_GPIOADC, GPIOADC, GPIOVREF, PIN_CAPABILITY_DIGITAL),
//  TODO: vbat        (ID_PIN_VBAT       , 125, RCC_GPIOADC, GPIOADC, GPIOVBAT, PIN_CAPABILITY_DIGITAL)

{
}

// From https://docs.google.com/spreadsheets/d/1yLciHFyPfhRfwEcG3wfqHDgRFa5OoQYTk63bUmTboa8/edit#gid=0

//  Pin Map is autogenerated. Do not update here

static const PinMap PinMap_I2C_SCL[] = {    { CM_PB6  , I2C1, GPIOB, GPIO6, 0, 0 },  /*  PinMap_I2C_SCL[0]  */  
                                                                   { CM_PB10 , I2C2, GPIOB, GPIO10, 0, 0 },  /*  PinMap_I2C_SCL[1]  */  
                                                                   { CM_PB8  , I2C1, GPIOB, GPIO8, 1, 0 },  /*  PinMap_I2C_SCL_REMAP[0]  */  
{ NC, NC, 0, 0 } };    static const PinMap PinMap_I2C_SDA[] = {    { CM_PB7  , I2C1, GPIOB, GPIO7, 0, 0 },  /*  PinMap_I2C_SDA[0]  */  
                                                                   { CM_PB11 , I2C2, GPIOB, GPIO11, 0, 0 },  /*  PinMap_I2C_SDA[1]  */  
                                                                   { CM_PB9  , I2C1, GPIOB, GPIO9, 1, 0 },  /*  PinMap_I2C_SDA_REMAP[0]  */  
{ NC, NC, 0, 0 } };    static const PinMap PinMap_I2C_SMBAI[] = {    { CM_PB5  , I2C1, GPIOB, GPIO5, 0, 0 },  /*  PinMap_I2C_SMBAI[0]  */  
                                                                   { CM_PB12 , I2C2, GPIOB, GPIO12, 0, 0 },  /*  PinMap_I2C_SMBAI[1]  */  
                                                                   { CM_PB5  , I2C1, GPIOB, GPIO5, 1, 0 },  /*  PinMap_I2C_SMBAI_REMAP[0]  */  
{ NC, NC, 0, 0 } };    static const PinMap PinMap_SPI_MISO[] = {    { CM_PA6  , SPI1, GPIOA, GPIO6, 0, 0 },  /*  PinMap_SPI_MISO[0]  */  
                                                                   { CM_PB14 , SPI2, GPIOB, GPIO14, 0, 0 },  /*  PinMap_SPI_MISO[1]  */  
                                                                   { CM_PB4  , SPI3, GPIOB, GPIO4, 0, 0 },  /*  PinMap_SPI_MISO[2]  */  
                                                                   { CM_PB4  , SPI1, GPIOB, GPIO4, 1, 0 },  /*  PinMap_SPI_MISO_REMAP[0]  */  
                                                                   { CM_PC11 , SPI3, GPIOC, GPIO11, 1, 0 },  /*  PinMap_SPI_MISO_REMAP[2]  */  
{ NC, NC, 0, 0 } };    static const PinMap PinMap_SPI_MOSI[] = {    { CM_PA7  , SPI1, GPIOA, GPIO7, 0, 0 },  /*  PinMap_SPI_MOSI[0]  */  
                                                                   { CM_PB15 , SPI2, GPIOB, GPIO15, 0, 0 },  /*  PinMap_SPI_MOSI[1]  */  
                                                                   { CM_PB5  , SPI3, GPIOB, GPIO5, 0, 0 },  /*  PinMap_SPI_MOSI[2]  */  
                                                                   { CM_PB5  , SPI1, GPIOB, GPIO5, 1, 0 },  /*  PinMap_SPI_MOSI_REMAP[0]  */  
                                                                   { CM_PC12 , SPI3, GPIOC, GPIO12, 1, 0 },  /*  PinMap_SPI_MOSI_REMAP[2]  */  
{ NC, NC, 0, 0 } };    static const PinMap PinMap_SPI_NSS[] = {    { CM_PA4  , SPI1, GPIOA, GPIO4, 0, 0 },  /*  PinMap_SPI_NSS[0]  */  
                                                                   { CM_PB12 , SPI2, GPIOB, GPIO12, 0, 0 },  /*  PinMap_SPI_NSS[1]  */  
                                                                   { CM_PA15 , SPI3, GPIOA, GPIO15, 0, 0 },  /*  PinMap_SPI_NSS[2]  */  
                                                                   { CM_PA15 , SPI1, GPIOA, GPIO15, 1, 0 },  /*  PinMap_SPI_NSS_REMAP[0]  */  
                                                                   { CM_PA4  , SPI3, GPIOA, GPIO4, 1, 0 },  /*  PinMap_SPI_NSS_REMAP[2]  */  
{ NC, NC, 0, 0 } };    static const PinMap PinMap_SPI_SCK[] = {    { CM_PA5  , SPI1, GPIOA, GPIO5, 0, 0 },  /*  PinMap_SPI_SCK[0]  */  
                                                                   { CM_PB13 , SPI2, GPIOB, GPIO13, 0, 0 },  /*  PinMap_SPI_SCK[1]  */  
                                                                   { CM_PB3  , SPI3, GPIOB, GPIO3, 0, 0 },  /*  PinMap_SPI_SCK[2]  */  
                                                                   { CM_PB3  , SPI1, GPIOB, GPIO3, 1, 0 },  /*  PinMap_SPI_SCK_REMAP[0]  */  
                                                                   { CM_PC10 , SPI3, GPIOC, GPIO10, 1, 0 },  /*  PinMap_SPI_SCK_REMAP[2]  */  
{ NC, NC, 0, 0 } };    static const PinMap PinMap_TIM_BKIN[] = {    { CM_PB12 , TIM1, GPIOB, GPIO12, 0, 0 },  /*  PinMap_TIM_BKIN[0]  */  
{ NC, NC, 0, 0 } };    static const PinMap PinMap_TIM_CH1[] = {    { CM_PA0  , TIM5, GPIOA, GPIO0, 0, 0 },  /*  PinMap_TIM_CH1[4]  */  
                                                                   { CM_PB6  , TIM4, GPIOB, GPIO6, 0, 0 },  /*  PinMap_TIM_CH1[3]  */  
                                                                   { CM_PA6  , TIM3, GPIOA, GPIO6, 0, 0 },  /*  PinMap_TIM_CH1[2]  */  
                                                                   { CM_PA8  , TIM1, GPIOA, GPIO8, 0, 0 },  /*  PinMap_TIM_CH1[0]  */  
                                                                   { CM_PD12 , TIM4, GPIOD, GPIO12, 1, 0 },  /*  PinMap_TIM_CH1_REMAP[3]  */  
{ NC, NC, 0, 0 } };    static const PinMap PinMap_TIM_CH1N[] = {    { CM_PB13 , TIM1, GPIOB, GPIO13, 0, 0 },  /*  PinMap_TIM_CH1N[0]  */  
{ NC, NC, 0, 0 } };    static const PinMap PinMap_TIM_CH2[] = {    { CM_PA1  , TIM5, GPIOA, GPIO1, 0, 0 },  /*  PinMap_TIM_CH2[4]  */  
                                                                   { CM_PB7  , TIM4, GPIOB, GPIO7, 0, 0 },  /*  PinMap_TIM_CH2[3]  */  
                                                                   { CM_PA7  , TIM3, GPIOA, GPIO7, 0, 0 },  /*  PinMap_TIM_CH2[2]  */  
                                                                   { CM_PA1  , TIM2, GPIOA, GPIO1, 0, 0 },  /*  PinMap_TIM_CH2[1]  */  
                                                                   { CM_PA9  , TIM1, GPIOA, GPIO9, 0, 0 },  /*  PinMap_TIM_CH2[0]  */  
                                                                   { CM_PD13 , TIM4, GPIOD, GPIO13, 1, 0 },  /*  PinMap_TIM_CH2_REMAP[3]  */  
{ NC, NC, 0, 0 } };    static const PinMap PinMap_TIM_CH2N[] = {    { CM_PB14 , TIM1, GPIOB, GPIO14, 0, 0 },  /*  PinMap_TIM_CH2N[0]  */  
{ NC, NC, 0, 0 } };    static const PinMap PinMap_TIM_CH3[] = {    { CM_PA2  , TIM5, GPIOA, GPIO2, 0, 0 },  /*  PinMap_TIM_CH3[4]  */  
                                                                   { CM_PB8  , TIM4, GPIOB, GPIO8, 0, 0 },  /*  PinMap_TIM_CH3[3]  */  
                                                                   { CM_PB0  , TIM3, GPIOB, GPIO0, 0, 0 },  /*  PinMap_TIM_CH3[2]  */  
                                                                   { CM_PA2  , TIM2, GPIOA, GPIO2, 0, 0 },  /*  PinMap_TIM_CH3[1]  */  
                                                                   { CM_PA10 , TIM1, GPIOA, GPIO10, 0, 0 },  /*  PinMap_TIM_CH3[0]  */  
                                                                   { CM_PD14 , TIM4, GPIOD, GPIO14, 1, 0 },  /*  PinMap_TIM_CH3_REMAP[3]  */  
{ NC, NC, 0, 0 } };    static const PinMap PinMap_TIM_CH3N[] = {    { CM_PB15 , TIM1, GPIOB, GPIO15, 0, 0 },  /*  PinMap_TIM_CH3N[0]  */  
{ NC, NC, 0, 0 } };    static const PinMap PinMap_TIM_CH4[] = {    { CM_PA3  , TIM5, GPIOA, GPIO3, 0, 0 },  /*  PinMap_TIM_CH4[4]  */  
                                                                   { CM_PB9  , TIM4, GPIOB, GPIO9, 0, 0 },  /*  PinMap_TIM_CH4[3]  */  
                                                                   { CM_PB1  , TIM3, GPIOB, GPIO1, 0, 0 },  /*  PinMap_TIM_CH4[2]  */  
                                                                   { CM_PA3  , TIM2, GPIOA, GPIO3, 0, 0 },  /*  PinMap_TIM_CH4[1]  */  
                                                                   { CM_PA11 , TIM1, GPIOA, GPIO11, 0, 0 },  /*  PinMap_TIM_CH4[0]  */  
                                                                   { CM_PD15 , TIM4, GPIOD, GPIO15, 1, 0 },  /*  PinMap_TIM_CH4_REMAP[3]  */  
{ NC, NC, 0, 0 } };    static const PinMap PinMap_TIM_ETR[] = {    { CM_PA12 , TIM1, GPIOA, GPIO12, 0, 0 },  /*  PinMap_TIM_ETR[0]  */  
{ NC, NC, 0, 0 } };    static const PinMap PinMap_UART_RX[] = {    { CM_PD2  , UART5, GPIOD, GPIO2, 0, 0 },  /*  PinMap_UART_RX[4]  */  
                                                                   { CM_PC11 , UART4, GPIOC, GPIO11, 0, 0 },  /*  PinMap_UART_RX[3]  */  
{ NC, NC, 0, 0 } };    static const PinMap PinMap_UART_TX[] = {    { CM_PC12 , UART5, GPIOC, GPIO12, 0, 0 },  /*  PinMap_UART_TX[4]  */  
                                                                   { CM_PC10 , UART4, GPIOC, GPIO10, 0, 0 },  /*  PinMap_UART_TX[3]  */  
{ NC, NC, 0, 0 } };    static const PinMap PinMap_USART_CK[] = {    { CM_PB12 , USART3, GPIOB, GPIO12, 0, 0 },  /*  PinMap_USART_CK[2]  */  
                                                                   { CM_PA4  , USART2, GPIOA, GPIO4, 0, 0 },  /*  PinMap_USART_CK[1]  */  
                                                                   { CM_PD7  , USART2, GPIOD, GPIO7, 1, 0 },  /*  PinMap_USART_CK_REMAP[1]  */  
{ NC, NC, 0, 0 } };    static const PinMap PinMap_USART_CTS[] = {    { CM_PB13 , USART3, GPIOB, GPIO13, 0, 0 },  /*  PinMap_USART_CTS[2]  */  
                                                                   { CM_PA0  , USART2, GPIOA, GPIO0, 0, 0 },  /*  PinMap_USART_CTS[1]  */  
                                                                   { CM_PD3  , USART2, GPIOD, GPIO3, 1, 0 },  /*  PinMap_USART_CTS_REMAP[1]  */  
{ NC, NC, 0, 0 } };    static const PinMap PinMap_USART_RTS[] = {    { CM_PB14 , USART3, GPIOB, GPIO14, 0, 0 },  /*  PinMap_USART_RTS[2]  */  
                                                                   { CM_PA1  , USART2, GPIOA, GPIO1, 0, 0 },  /*  PinMap_USART_RTS[1]  */  
                                                                   { CM_PD4  , USART2, GPIOD, GPIO4, 1, 0 },  /*  PinMap_USART_RTS_REMAP[1]  */  
{ NC, NC, 0, 0 } };    static const PinMap PinMap_USART_RX[] = {    { CM_PB11 , USART3, GPIOB, GPIO11, 0, 0 },  /*  PinMap_USART_RX[2]  */  
                                                                   { CM_PA3  , USART2, GPIOA, GPIO3, 0, 0 },  /*  PinMap_USART_RX[1]  */  
                                                                   { CM_PA10 , USART1, GPIOA, GPIO10, 0, 0 },  /*  PinMap_USART_RX[0]  */  
                                                                   { CM_PD6  , USART2, GPIOD, GPIO6, 1, 0 },  /*  PinMap_USART_RX_REMAP[1]  */  
                                                                   { CM_PB7  , USART1, GPIOB, GPIO7, 1, 0 },  /*  PinMap_USART_RX_REMAP[0]  */  
{ NC, NC, 0, 0 } };    static const PinMap PinMap_USART_TX[] = {    { CM_PB10 , USART3, GPIOB, GPIO10, 0, 0 },  /*  PinMap_USART_TX[2]  */  
                                                                   { CM_PA2  , USART2, GPIOA, GPIO2, 0, 0 },  /*  PinMap_USART_TX[1]  */  
                                                                   { CM_PA9  , USART1, GPIOA, GPIO9, 0, 0 },  /*  PinMap_USART_TX[0]  */  
                                                                   { CM_PD5  , USART2, GPIOD, GPIO5, 1, 0 },  /*  PinMap_USART_TX_REMAP[1]  */  
                                                                   { CM_PB6  , USART1, GPIOB, GPIO6, 1, 0 },  /*  PinMap_USART_TX_REMAP[0]  */  
{ NC, NC, 0, 0 } };    
                                                                   
/*
typedef struct
{
    PinName pin;
    int peripheral;
    int function;  //  mode, speed, output type and pull-up/pull-down
} PinMap;

static const PinMap PinMap_ADC[] = {
    {P0_11, ADC0_0, 2},
    {P1_0 , ADC0_1, 2},
    {P1_1 , ADC0_2, 2},
    {P1_2 , ADC0_3, 2},
    // {P1_3 , ADC0_4, 2}, -- should be mapped to SWDIO only
    {P1_4 , ADC0_5, 1},
    {P1_10, ADC0_6, 1},
    {P1_11, ADC0_7, 1},
    {NC   , NC    , 0}
};

static const PinMap PinMap_SPI_SCLK[] = {
    {P10_12, SPI_0, 4},
    {P11_12, SPI_1, 2},
    {NC   , NC   , 0}
};

static const PinMap PinMap_SPI_SSEL[] = {
    {P10_13, SPI_0, 4},
    {P11_13, SPI_1, 2},
    {NC   , NC   , 0}
};

static const PinMap PinMap_SPI_MOSI[] = {
    {P10_14, SPI_0, 4},
    {P11_14, SPI_1, 2},
    {NC   , NC   , 0}
};

static const PinMap PinMap_SPI_MISO[] = {
    {P10_15, SPI_0, 4},
    {P11_15, SPI_1, 2},
    {NC   , NC   , 0}
};

static const PinMap PinMap_I2C_SDA[] = {
    {PB_7,  I2C_1, STM_PIN_DATA(STM_MODE_AF_OD, GPIO_NOPULL, GPIO_AF1_I2C1)},
    {PB_9,  I2C_1, STM_PIN_DATA(STM_MODE_AF_OD, GPIO_NOPULL, GPIO_AF1_I2C1)},
    {PB_11, I2C_2, STM_PIN_DATA(STM_MODE_AF_OD, GPIO_NOPULL, GPIO_AF1_I2C2)},
    {NC,    NC,    0}
};

static const PinMap PinMap_I2C_SCL[] = {
    {PB_6,  I2C_1, STM_PIN_DATA(STM_MODE_AF_OD, GPIO_NOPULL, GPIO_AF1_I2C1)},
    {PB_8,  I2C_1, STM_PIN_DATA(STM_MODE_AF_OD, GPIO_NOPULL, GPIO_AF1_I2C1)},
    {PB_10, I2C_2, STM_PIN_DATA(STM_MODE_AF_OD, GPIO_NOPULL, GPIO_AF1_I2C2)},
    {NC,    NC,    0}
};
*/